{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jq680\\\\Desktop\\\\Meerkat-sz\\\\src\\\\pages\\\\newdataset\\\\index.js\",\n  _s = $RefreshSig$();\n//資料集新增頁面\nimport { useState, useEffect, useRef } from \"react\";\nimport { api_get_data_newSet } from \"../../global/constants\";\nimport Edit from \"./components/edit\";\nimport \"./index.css\";\nimport { Outlet } from \"react-router-dom\";\n\n//去json資料庫拿東西出來\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchDataset(setDataset) {\n  const res = await fetch(api_get_data_newSet);\n  const {\n    dataset\n  } = await res.json();\n  setDataset(dataset);\n}\n\n//將要新增的資料集存至json內 注意:之後需要寫api推給ckan\nasync function putDataset(dataset) {\n  await fetch(api_get_data_newSet, {\n    method: \"PUT\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      dataset\n    })\n  });\n}\nconst NewDataset = () => {\n  _s();\n  //定義一個react偵測到有變動時要渲染的東西\n  const [dataset, setDataset] = useState([]);\n  const submittingState = useRef(false);\n\n  //當頁面刷新的時候會自動執行下方兩個useEffect\n  //定義有變動時要做的動作\n  useEffect(() => {\n    //matter有變動時，存資料到json\n    if (!submittingState.current) {\n      //但是當畫面初始化的時候不要把空資料夾更新到json\n      return;\n    }\n    putDataset(dataset).then(dataset => submittingState.current = false); //要更新json的時候，更改狀態，更新好後再把狀態改回來\n  }, [dataset]);\n  useEffect(() => {\n    //網頁開啟時，從json取資料\n    fetchDataset(setDataset);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Edit, {\n      add: setDataset,\n      submittingState: submittingState,\n      dataset: dataset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(NewDataset, \"bjU5XKh55KGRK5qebPM5m6r+76Q=\");\n_c = NewDataset;\nexport default NewDataset;\nvar _c;\n$RefreshReg$(_c, \"NewDataset\");","map":{"version":3,"names":["useState","useEffect","useRef","api_get_data_newSet","Edit","Outlet","jsxDEV","_jsxDEV","fetchDataset","setDataset","res","fetch","dataset","json","putDataset","method","headers","body","JSON","stringify","NewDataset","_s","submittingState","current","then","className","children","add","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jq680/Desktop/Meerkat-sz/src/pages/newdataset/index.js"],"sourcesContent":["//資料集新增頁面\nimport { useState, useEffect, useRef } from \"react\";\nimport { api_get_data_newSet } from \"../../global/constants\";\nimport Edit from \"./components/edit\";\nimport \"./index.css\";\nimport { Outlet } from \"react-router-dom\";\n\n//去json資料庫拿東西出來\nasync function fetchDataset(setDataset) {\n  const res = await fetch(api_get_data_newSet);\n  const { dataset } = await res.json();\n  setDataset(dataset);\n}\n\n//將要新增的資料集存至json內 注意:之後需要寫api推給ckan\nasync function putDataset(dataset) {\n  await fetch(api_get_data_newSet, {\n    method: \"PUT\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({ dataset }),\n  });\n}\n\nconst NewDataset = () => {\n  //定義一個react偵測到有變動時要渲染的東西\n  const [dataset, setDataset] = useState([]);\n  const submittingState = useRef(false);\n\n  //當頁面刷新的時候會自動執行下方兩個useEffect\n  //定義有變動時要做的動作\n  useEffect(() => {\n    //matter有變動時，存資料到json\n    if (!submittingState.current) {\n      //但是當畫面初始化的時候不要把空資料夾更新到json\n      return;\n    }\n    putDataset(dataset).then((dataset) => (submittingState.current = false)); //要更新json的時候，更改狀態，更新好後再把狀態改回來\n  }, [dataset]);\n\n  useEffect(() => {\n    //網頁開啟時，從json取資料\n    fetchDataset(setDataset);\n  }, []);\n  \n  return (\n    <div className=\"app\">\n      <Edit add={setDataset} submittingState={submittingState} dataset={dataset}/>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default NewDataset;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,mBAAmB,QAAQ,wBAAwB;AAC5D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,aAAa;AACpB,SAASC,MAAM,QAAQ,kBAAkB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAeC,YAAYA,CAACC,UAAU,EAAE;EACtC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACR,mBAAmB,CAAC;EAC5C,MAAM;IAAES;EAAQ,CAAC,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;EACpCJ,UAAU,CAACG,OAAO,CAAC;AACrB;;AAEA;AACA,eAAeE,UAAUA,CAACF,OAAO,EAAE;EACjC,MAAMD,KAAK,CAACR,mBAAmB,EAAE;IAC/BY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP;IAAQ,CAAC;EAClC,CAAC,CAAC;AACJ;AAEA,MAAMQ,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACT,OAAO,EAAEH,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMsB,eAAe,GAAGpB,MAAM,CAAC,KAAK,CAAC;;EAErC;EACA;EACAD,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACqB,eAAe,CAACC,OAAO,EAAE;MAC5B;MACA;IACF;IACAT,UAAU,CAACF,OAAO,CAAC,CAACY,IAAI,CAAEZ,OAAO,IAAMU,eAAe,CAACC,OAAO,GAAG,KAAM,CAAC,CAAC,CAAC;EAC5E,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;EAEbX,SAAS,CAAC,MAAM;IACd;IACAO,YAAY,CAACC,UAAU,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEF,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA,CAACH,IAAI;MAACuB,GAAG,EAAElB,UAAW;MAACa,eAAe,EAAEA,eAAgB;MAACV,OAAO,EAAEA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC5ExB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV,CAAC;AAACV,EAAA,CA3BID,UAAU;AAAAY,EAAA,GAAVZ,UAAU;AA6BhB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}