{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jq680\\\\Desktop\\\\Meerkat-swim\\\\src\\\\pages\\\\home\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { API_GET_DATA } from \"../../global/constants\";\nimport Edit from \"./components/edit\";\nimport List from \"./components/list\";\nimport \"./index.css\";\nimport { Outlet } from \"react-router-dom\";\n\n//去json資料庫拿東西出來\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchMatter(setMatter) {\n  const res = await fetch(API_GET_DATA);\n  const {\n    matter\n  } = await res.json();\n  setMatter(matter);\n}\nasync function putMatter(matter) {\n  await fetch(API_GET_DATA, {\n    method: \"PUT\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      matter\n    })\n  });\n}\nconst Home = () => {\n  _s();\n  //定義一個react偵測到有變動時要渲染的東西\n  const [matter, setMatter] = useState([]);\n  const submittingState = useRef(false);\n\n  //定義有變動時要做的動作\n  useEffect(() => {\n    //matter有變動時，存資料到json\n    if (!submittingState.current) {\n      //但是當畫面初始化的時候不要把空資料夾更新到json\n      return;\n    }\n    putMatter(matter).then(matter => submittingState.current = false); //要更新json的時候，更改狀態，更新好後再把狀態改回來\n  }, [matter]);\n  useEffect(() => {\n    //網頁開啟時，從json取資料\n    fetchMatter(setMatter);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Edit, {\n      add: setMatter,\n      submittingState: submittingState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      listMatter: matter,\n      listDelete: setMatter,\n      submittingState: submittingState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Ix5NOcp6jn4hDS+RbUSRkTpAud0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useRef","API_GET_DATA","Edit","List","Outlet","jsxDEV","_jsxDEV","fetchMatter","setMatter","res","fetch","matter","json","putMatter","method","headers","body","JSON","stringify","Home","_s","submittingState","current","then","className","children","add","fileName","_jsxFileName","lineNumber","columnNumber","listMatter","listDelete","_c","$RefreshReg$"],"sources":["C:/Users/jq680/Desktop/Meerkat-swim/src/pages/home/index.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { API_GET_DATA } from \"../../global/constants\";\nimport Edit from \"./components/edit\";\nimport List from \"./components/list\";\nimport \"./index.css\";\nimport { Outlet } from \"react-router-dom\";\n\n//去json資料庫拿東西出來\nasync function fetchMatter(setMatter) {\n  const res = await fetch(API_GET_DATA);\n  const { matter } = await res.json();\n  setMatter(matter);\n}\n\nasync function putMatter(matter) {\n  await fetch(API_GET_DATA, {\n    method: \"PUT\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({ matter }),\n  });\n}\n\nconst Home = () => {\n  //定義一個react偵測到有變動時要渲染的東西\n  const [matter, setMatter] = useState([]);\n  const submittingState = useRef(false);\n\n  //定義有變動時要做的動作\n  useEffect(() => {\n    //matter有變動時，存資料到json\n    if (!submittingState.current) {\n      //但是當畫面初始化的時候不要把空資料夾更新到json\n      return;\n    }\n    putMatter(matter).then((matter) => (submittingState.current = false)); //要更新json的時候，更改狀態，更新好後再把狀態改回來\n  }, [matter]);\n\n  useEffect(() => {\n    //網頁開啟時，從json取資料\n    fetchMatter(setMatter);\n  }, []);\n  return (\n    <div className=\"app\">\n      <Edit add={setMatter} submittingState={submittingState} />\n      <List\n        listMatter={matter}\n        listDelete={setMatter}\n        submittingState={submittingState}\n      />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,YAAY,QAAQ,wBAAwB;AACrD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,aAAa;AACpB,SAASC,MAAM,QAAQ,kBAAkB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAeC,WAAWA,CAACC,SAAS,EAAE;EACpC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACT,YAAY,CAAC;EACrC,MAAM;IAAEU;EAAO,CAAC,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;EACnCJ,SAAS,CAACG,MAAM,CAAC;AACnB;AAEA,eAAeE,SAASA,CAACF,MAAM,EAAE;EAC/B,MAAMD,KAAK,CAACT,YAAY,EAAE;IACxBa,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP;IAAO,CAAC;EACjC,CAAC,CAAC;AACJ;AAEA,MAAMQ,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA,MAAM,CAACT,MAAM,EAAEH,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMuB,eAAe,GAAGrB,MAAM,CAAC,KAAK,CAAC;;EAErC;EACAD,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACsB,eAAe,CAACC,OAAO,EAAE;MAC5B;MACA;IACF;IACAT,SAAS,CAACF,MAAM,CAAC,CAACY,IAAI,CAAEZ,MAAM,IAAMU,eAAe,CAACC,OAAO,GAAG,KAAM,CAAC,CAAC,CAAC;EACzE,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZZ,SAAS,CAAC,MAAM;IACd;IACAQ,WAAW,CAACC,SAAS,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EACN,oBACEF,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA,CAACJ,IAAI;MAACwB,GAAG,EAAElB,SAAU;MAACa,eAAe,EAAEA;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC1DxB,OAAA,CAACH,IAAI;MACH4B,UAAU,EAAEpB,MAAO;MACnBqB,UAAU,EAAExB,SAAU;MACtBa,eAAe,EAAEA;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjC,eACFxB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV,CAAC;AAACV,EAAA,CA9BID,IAAI;AAAAc,EAAA,GAAJd,IAAI;AAgCV,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}